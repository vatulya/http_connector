<!DOCTYPE html>
<meta charset="utf-8"/>
<title>WebSocket Test</title>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.dev.js"></script>
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/url-join@4.0.1/lib/url-join.min.js"></script>
<script language="javascript" type="text/javascript">

  $(document).ready(function onReady() {

    var outputContainer = $('#output');
    var queueContainer = $('#index');
    var inputEventName = $('#inputEventName');
    var inputData = $('#inputData');
    var inputSubmit = $('#inputSubmit');
    var inputClearQueue = $('#inputClearQueue');
    var inputClearConsole = $('#inputClearConsole');
    var inputLimit = $('#inputLimit');
    var selectStatus = $('#selectStatus');
    var inputProcessing = $('#inputProcessing');
    var inputGetQueue = $('#inputGetQueue');

    function show (message) {
      outputContainer.append('<div>' + message + '</div>');
    }

    function showQueue (index) {
      queueContainer.html('Queue:');
      index.forEach((item) => queueContainer.append('<div>' + JSON.stringify(item) + '</div>'));
    }

    inputSubmit.on('click', function submit () {
      var eventName = inputEventName.val();
      var params = inputData.val().split('\n');
      inputData.val('');

      params.forEach(function (val, i, arr) {
        val = arr[i] = val.trim();
        if (!val.length) {
          arr.splice(i, 1);
        }
      });

      if (params.length < 1) {
        return;
      }

      show('SEND: ' + JSON.stringify(params));

      socket.emit(eventName, {commands: params});
    });

    inputClearQueue.on('click', function getQueue () {
      socket.emit('clearQueue');
    });

    inputClearConsole.on('click', function clearConsole () {
      outputContainer.html('');
    });

    inputGetQueue.on('click', function getQueue () {
      $.ajax({
        url: urljoin('<%= website.baseHost %>', '<%= website.basePath %>api', 'v1', 'commands'),
        data: {
          status: selectStatus.val(),
          processing: inputProcessing.prop('checked') ? 1 : null,
          limit: inputLimit.val() ? inputLimit.val() : null,
        },
        type: "get",
      }).done(function getQueueDone (response) {
        alert(JSON.stringify(response));
      }).fail(function getQueueFail (jqXHR, response) {
        alert(JSON.stringify(response));
      });
    });

    const options = {
        <% if (ws.path) { %>path: '<%= ws.path %>',<% } %>
    };

    const socket = io('<%= ws.host %>', options);

    socket.on('connect', () => {
      show('connected');
      socket.emit('getQueue');
    });

    socket.on('message', function (data) {
      show('MESSAGE: ' + JSON.stringify(data));
    });

    socket.on('inQueue', function (data) {
      showQueue(data);
    });

  });

</script>

<body>
<h2>WebSocket Test</h2>

<div>
    <input id="inputEventName" value="message">
    <textarea id="inputData"></textarea>
    <input type="button" id="inputSubmit" value="submit">
    <input type="button" id="inputClearQueue" value="clearQueue">
    <input type="button" id="inputClearConsole" value="clearConsole">
    <input id="inputLimit" value="10">
    <select name="status" id="selectStatus">
        <option value="">All</option>
        <option value="in_queue">In Queue</option>
        <option value="processing">Processing</option>
        <option value="finished">Finished</option>
    </select>
    <input type="checkbox" name="processing" value="1" alt="processing" id="inputProcessing" />
    <input type="button" id="inputGetQueue" value="getQueue">
</div>

<div id="output"></div>
<div id="index" style="border: 1px red">:</div>

</body>